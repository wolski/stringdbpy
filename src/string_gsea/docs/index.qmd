---
title: "Visualizing string-db GSEA results"
params:
  data_file: null    # or "~"
  links_file: null
---

```{python}
#| include: false
#| tags: [parameters]

# declare the parameter (default None)
data_file: str  = None
links_file: str  = None
```
```{python}
#| vscode: {languageId: python}
#| include: false
# Define input directory and file
wd = %pwd

from IPython.display import Markdown, display
from pathlib import Path

if data_file is None:
    # fallback, or raise, or skip
    file_data = Path(wd).parent/"tests/data/dummy_out/WU_abcd_GSEA/from_rnk"/"WUabcd_string_gsea_results_long.xlsx"
    file_links = Path(wd).parent/"tests/data/dummy_out/WU_abcd_GSEA/from_rnk"/"links.txt"
else:
    file_data = Path(data_file)
    file_links = Path(links_file)

```

The input file used is:

```{python}
#| echo: false
#| output: asis
print(str(file_data) + "\n")
print(str(file_links) + "\n")
```



- [Visualize Networks](VisualizeNetworks.qmd)
- [Compare Contrasts](VisualizeMultipleContrastsGSEA.qmd)



# Links to the STRING-db GSEA results


```{python}
#| echo: false
#| output: asis
#| include: true

# Read the links.txt file
with open(file_links, "r") as f:
    links = {
        line.split(": ", 1)[0]: line.split(": ", 1)[1].strip()
        for line in f.read().splitlines() if line.strip()
    }

# Create a markdown table
display(Markdown("## STRING-db GSEA Results Links\n"))
display(Markdown("| Contrast | URL |"))
display(Markdown("|----------|-----|"))
for contrast, url in links.items():
    display(Markdown(f"| {contrast} | [{url}]({url}) |"))
```









